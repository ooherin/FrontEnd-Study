{"ast":null,"code":"var _jsxFileName = \"/Users/hyerin/Desktop/\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/notion/src/components/Text.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Text = ({\n  isEditMode,\n  ...text\n}) => {\n  const {\n    checked,\n    children\n  } = text;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isEditMode ? /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      checked: checked,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      checked: checked,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = Text;\nexport default Text;\nconst Wrapper = styled.div`\n  text-decoration: ${({\n  checked\n}) => checked ? \"line-through\" : \"none\"};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-left: 10px;\n`;\nconst S = {\n  Wrapper\n};\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","isEditMode","text","checked","children","S","Wrapper","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","$RefreshReg$"],"sources":["/Users/hyerin/Desktop/프로젝트/notion/src/components/Text.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface TextProps {\n  checked: boolean;\n  children: React.ReactNode;\n  isEditMode: boolean;\n}\n\ninterface WrapperProps {\n  checked: boolean;\n}\n\nconst Text = ({ isEditMode, ...text }: TextProps) => {\n  const { checked, children } = text;\n  return (\n    <>\n      {isEditMode ? (\n        <S.Wrapper checked={checked}>{children}</S.Wrapper>\n      ) : (\n        <S.Wrapper checked={checked}>{children}</S.Wrapper>\n      )}\n    </>\n  );\n};\nexport default Text;\n\nconst Wrapper = styled.div<WrapperProps>`\n  text-decoration: ${({ checked }: { checked: boolean }) =>\n    checked ? \"line-through\" : \"none\"};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-left: 10px;\n`;\n\nconst S = {\n  Wrapper,\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAYvC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,UAAU;EAAE,GAAGC;AAAgB,CAAC,KAAK;EACnD,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGF,IAAI;EAClC,oBACEL,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACGH,UAAU,gBACTJ,OAAA,CAACQ,CAAC,CAACC,OAAO;MAACH,OAAO,EAAEA,OAAQ;MAAAC,QAAA,EAAEA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,gBAEnDb,OAAA,CAACQ,CAAC,CAACC,OAAO;MAACH,OAAO,EAAEA,OAAQ;MAAAC,QAAA,EAAEA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EACnD,gBACD,CAAC;AAEP,CAAC;AAACC,EAAA,GAXIX,IAAI;AAYV,eAAeA,IAAI;AAEnB,MAAMM,OAAO,GAAGX,MAAM,CAACiB,GAAkB;AACzC,qBAAqB,CAAC;EAAET;AAA8B,CAAC,KACnDA,OAAO,GAAG,cAAc,GAAG,MAAO;AACtC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,CAAC,GAAG;EACRC;AACF,CAAC;AAAC,IAAAK,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}